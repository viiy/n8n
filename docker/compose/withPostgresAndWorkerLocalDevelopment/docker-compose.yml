version: '3.8'

volumes:
  db_storage:
  n8n_storage:
  redis_storage:

x-shared: &shared
  restart: always
  build:
    context: ../../images/n8n-custom-dev
    dockerfile: Dockerfile
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_BASIC_AUTH_ACTIVE=true
    - N8N_BASIC_AUTH_USER
    - N8N_BASIC_AUTH_PASSWORD
  links:
    - postgres
    - redis
  volumes:
    - ../../../:/app/
  command: sh -c "npm install && npm run dev"
  depends_on:
    - redis
    - postgres


services:
  postgres:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_storage:/data

  n8n:
    <<: *shared
    ports:
      - 5678:5678

#  n8n-worker:
#    <<: *shared
#    build:
#      context: ../withPostgresAndWorkerLocalDevelopment
#      dockerfile: Dockerfile
#    command: /bin/sh -c "sleep 5; n8n worker"
#    depends_on:
#      - n8n
